############################################################
################ ACTUALLY DO THESE THINGS ##################
############################################################

!!!!!
handle dev.beiwe.org server configuration for app.
administrative: SSL on the new server.
    do we have a wildcard cert?
!!!!!

administrate: Make new access credentials for the beiwe2 bucket, so that it can be handed out without  myself and josh and the server.

administrative: implement mongobackups of the mongo db on the server.

architecture: add survey notification text to the things that can be set remotely.

app, bug: the app does not handle the 406 code, and the corrosponding error in the upload logic has a failure mode.  see fix implemented on production1 and port it to master.

app: check that the app's code for only uploading retired files is actually functional for audio recording files.

app: Since HTTPAsync was refactored it has become unclear whether the httpAsync http request logic properly handle response codes.  Investigate, redoc, determine behavior.

!!!!!!
app + backend: add device settings values values supplied during registration, make sure that we can (for the august 17 study) put additional values into that JSON blob without crashing the app.  (i.e., look for specific values, but don't crash if they aren't there.)
!!!!!!

website: make reset_device() and reset_password() study-specific

backend/website: Check why automatic logout keeps happening

website/backend: Make Edit Study's Device Parameters page include the editable text strings

website/backend: See if we can use flask_login and standardized parameters so that not every page needs to pass in information about the logged in user

website/backend: implement error page for admin permission denied and survey not found (this would be the redirect to in the survey/study access decorator, currently we just throw a 403 and 404, respectively)

website: Add ability to delete users (patients, not admins)?
website: add ability to delete studies?


############################################################
####################### ARCHITECTURE #######################
############################################################
!!!!
!!!! this might be incorrect, we may have a third level of admin. (the distinction between study administrators and system administrators.) !!!
!!!!
Admin/Access control:
	2 levels of users: researcher admins, and super admins. (system admins?)
	super-admins
		can create new researchers,
		reset researchers' passwords
		edit which studies researchers are attached to
		delete researchers
		create studies.
	admins should only have survey modification rights to on surveys in studies they are assigned to.


!!! not implemented !!!
-Ask JP if he wants the option to make surveys display questions in randomized order...
if so:
    surveys should be able to randomize their order
    surveys should be able to display a subset ("ask only 10 questions")
    -surveys should (optionally) be able to present questions totally at random
    -surveys should (optionally) be able to present a subset that guarantees all questions are asked
        permutation problems:
        Q = number of questions
        N = number of questions per run
        R = number of runs = Q/N
        X = extra questions need to fill out the final run to satisfy N
        if we enforce X != 0 while also enforcing no repeat questions, those questions that show up in the last run of the first permutation are counted for twice (once at end of permutation 1, once at beginning of permutation 2) then those last questions are "locked" into only appearing in these overlapping runs.
            solution: no overlapping runs.

Surveys:
    able to have separate surveys for each study
    don't need a survey to be shared among multiple studies

    surveys must be able to be scheduled:
        once a week
        once a day
        multiple times per day

Customizable Times:
	-an option that can be editted on the edit survey page (not just survey creation)
	-error-checking (this isn't mentioned in the change order)
		for example, BLUETOOTH_ON_DURATION must be no longer than BLUETOOTH_PERIOD minus BLUETOOTH_START_TIME_IN_PERIOD.
 	-This is likely to be modified by the email thread about timers and data streams.

Customizable wording, customizable from the admin panel at the time of study creation:
	-Text on the "Call Clinician" buttons throughout the app.
	-Main body text on Voice Recording screen
	-About page text
	-Text in the Toast that pops up after a user submits a completed survey
	-Text in the Toast that pops up after a user submits a completed voice recording
	(We should probably limit text inputs to ASCII-only, not Unicode characters. The survey editor interface currently (June 29, 2015) has a check for Unicode characters in survey_designer.py/update_survey().)

###############################################################
####################### REFACTOR THINGS #######################
###############################################################

merge mms and sms sent receivers if possible.

the backgroundprocess should be backgroundservice

####################################################################
####################### ADMINISTRATIVE TASKS #######################
####################################################################

remove old data from s3:
    It's safe to wipe anything prior to 5/1/15.   The data Matt is using is all more recent than that, collected later in May and June.
    If it's easier to go by participant ID's, do ____NOT_____ delete the participant ID's below:
        7rzzd3, 6sod84, ahhv9h, c7hze5, 66f1zz, qrsmla, fwgs3q, g7s4zv, yi279c, v26kw2

####################################################################
########################## GENERAL TASKS ###########################
####################################################################

check behavior of generating unique device IDs and how that interacts with devices that are not phones... do not know what the behavior of this is.

UHOH, I don't think we have any code for downloading user mac addresses/hashes of them...

Eli: double check whether accelerometer timers are fuzzy, this came up in an email exchange, we probably (triple check) can change this behavior.
    turning it on is exact, turning it off is fuzzy

Graph stuff
    -Make it look pretty for all the different types of survey questions
    -Fix crappy width scaling in the app; don't hard-code it to 200px wide or whatever it is

####################################################################
############################ KNOWN BUGS ############################
####################################################################

Known unknown bug: if the logout timer is less than the max voice recording time period... we have no idea what happens.
[this is Josh:] To answer the above, I'm pretty sure that nothing bad happens: the app automatically logs out, which triggers OnPause in the AudioRecordingActivity, which stops the recording and saves it.  It's bad UX, because the user might be logged out before they've finished the recording, but nothing should actually BREAK.

MMS logging:
    -When we receive MMS messages, we are not grabbing the message length or the "sent time" timestamp.
    -Triple Logging of at least MMS messages:
        Eli tried tracking this behavior down, I'm not positive about it but the best data and answer I have is this:
            Messages live in different "boxes" (inbox, outbox, sent-box, draft-box) and the ContentObserver triggers on various types of updates related to these boxes. We filter out messages that are not in sent-box, this is the behavior I see:
                we get an update when a message moves from one box to another box, however, I swear that messages that are supposed to be in the draft-box frequently claim they are in the sent-box.  buh?  this must be false, I don't know how to filter the data to remove these false updates.
                MMS messages in the sent box get updated when they get read receipts...  the data for these read receipts is always there and is always null.
    -Josh tried tracking this down as well, there is a comment is smssentreceiver

if the background process is not running and a user presses a notification to take a survey, the app crashes.  This is probably due to the rendering of a dynamic page requiring access to the survey's json file, which it accesses through the file manager, which has not been instantiated.
    probably the best solution is to make the unencrypted files have their own reader?  that just creates more chances for conflicts....
    TODO: check order of instantiation of for the dynamically rendered pages. (uhg)

Look at the number input box in the survey, and see if changing android:inputType="number" to numberDecimal solves the problem of people putting more than one decimal point into the answer

####################################################################
######################## OPTIONAL THINGS ###########################
####################################################################

Admin Panel UI
    -Make user unable to hit "back" button after logout, and return to the admin panel http://stackoverflow.com/a/20652896/1789466
    -(Josh) Throw in an Admin Panel warning message (don't use IE < 8!)
    -Make the page reload after they create a new patient or remove a device


re-analyze whether the following is true:
    In RegistrationActivity: don't set username and password on the device UNTIL they've been validated by the server.  This would require substantial changes to PostRequest.java.  Leaving this as-is does not actually present any serious security flaws.

####################################################################
############################## FUTURE ##############################
####################################################################

App UI
    -define a style and prettify the UI
    -Get an app icon

add in more user device info, specifically I am thinking of android version, sdk version for debugging

Add crash logging:
    http://stackoverflow.com/questions/19897628/need-to-handle-uncaught-exception-and-send-log-file
    http://www.acra.ch/
    http://stackoverflow.com/questions/601503/how-do-i-obtain-crash-data-from-my-android-application

Improve uploading: Build a listener for WiFi connected, then try to upload files and download surveys

Timers & data upload
    -Add an alert if the phone hasn't been able to upload in a long time?
    -Add a server-side alert if a patient hasn't uploaded data in a long time? - unlikely to be useful...

########################################################################################
####################### ideas (these do not need to be acted on) #######################
########################################################################################
handle leap second bugs :D  (this is a joke.  don't actually do this.)

infrastructure to test if the app is working and reporting data, once it's been installed and registered?

implement a flask url function for a device's phone number changing. all it does is calls upload_device_ids(), add check to android... this means we have to store the phone number (or hash of) in order to check for changes.

Trying to log when the app was started: We can't determine whether the app was started on boot or started by the user opening it.  Maybe we should just give up on this.

if we restart the background service occasionally we can get around the user-disabled bluetooth "problem"

There is no way to inform the user that the encryption key is corrupted.

we may be able to reduce some HTTPS overhead using the following stackoverflow
    http://stackoverflow.com/questions/5643704/reusing-ssl-sessions-in-android-with-httpclient
