
there is a bug on the survey editor page where sometimes after clicking save and deploy it does not save, just reloads the page.
    (jeanette is working on replicating the issue, though it has been noticed by other researchers)

############################################################
################ ACTUALLY DO THESE THINGS ##################
############################################################

Josh: test that the survey is passing survey.settings correcty from the web interface through to the app

Josh: on the edit_survey webpage, make the inputs for randomize_with_memory and number_of_random_questions become invisible if the random checkbox is unchecked.
Also, show the current total number of questions.

Make a crude logo (just a capital letter "B" inside a square)

Ask Jeanette if they want other customizable text strings

Eli: It would be nice if there was some notification of which studies are currently live...

Eli/Josh: surveys do not have titles in the editor or on the graph display

Josh: I see 4 todos in base.html, footer.html, and view_study.html.  These are super low priority, but they don't show up in liclipse todo, so I'm sticking a reminder here.

administrate: change access credentials for the beiwe2 bucket, create read-only creds and limit to one study.

architecture: add survey notification text to the things that can be set remotely.

Fix NPE crash in PersistentData; probably from a null appContext

backend/website: Check why automatic logout keeps happening- it seems that the session expiration date does not get renewed on every pageload; only on login

website/backend: See if we can use flask_login and standardized parameters so that not every page needs to pass in information about the logged in user

website/backend: implement error page for admin permission denied and survey not found (this would be the redirect to in the survey/study access decorator, currently we just throw a 403 and 404, respectively)

website: Add ability to delete users (patients, not admins)?

website: add a "confirm" field for the 32-character key that super-admins enter when they create a new study.

app: make function in backgroundservice that causes it to crash, link it to debuginterface button.

website: remove bluetooth offset from website, in backend default it to 0.  do not remove from study settings schema.

############################################################
####################### ARCHITECTURE #######################
############################################################

!!!!
future proposal: add a third level of admins, study admiinistration
!!!!
Admin/Access control:
	2 levels of users: researcher admins, and super admins. (system admins?)
	super-admins
		can create new researchers,
		reset researchers' passwords
		edit which studies researchers are attached to
		delete researchers
		create studies.
	admins should only have survey modification rights to on surveys in studies they are assigned to.

Randomized questions: surveys should be able to randomize their order
    surveys should be able to display a subset ("ask only 10 questions")
    -surveys should (optionally) be able to present questions totally at random
    -surveys should (optionally) be able to present a subset that guarantees all questions are asked
        permutation problems:
        Q = number of questions
        N = number of questions per run
        R = number of runs = Q/N
        X = extra questions need to fill out the final run to satisfy N
        if we enforce X != 0 while also enforcing no repeat questions, those questions that show up in the last run of the first permutation are counted for twice (once at end of permutation 1, once at beginning of permutation 2) then those last questions are "locked" into only appearing in these overlapping runs.
            solution: no overlapping runs.

Surveys:
    able to have separate surveys for each study
    don't need a survey to be shared among multiple studies
    surveys must be able to be scheduled:
        once a week
        once a day
        multiple times per day

Customizable Times:
	-an option that can be editted on the edit survey page (not just survey creation)
	-error-checking (this isn't mentioned in the change order)
		for example, BLUETOOTH_ON_DURATION must be no longer than BLUETOOTH_PERIOD minus BLUETOOTH_START_TIME_IN_PERIOD.
 	-This is likely to be modified by the email thread about timers and data streams.

Customizable wording, customizable from the admin panel at the time of study creation:
	-Text on the "Call Clinician" buttons throughout the app.
	-Main body text on Voice Recording screen
	-About page text
	-Text in the Toast that pops up after a user submits a completed survey
	-Text in the Toast that pops up after a user submits a completed voice recording
	(We should probably limit text inputs to ASCII-only, not Unicode characters. The survey editor interface currently (June 29, 2015) has a check for Unicode characters in survey_designer.py/update_survey().)

###############################################################
####################### REFACTOR THINGS #######################
###############################################################

merge mms and sms sent receivers if possible.

####################################################################
####################### ADMINISTRATIVE TASKS #######################
####################################################################

remove old data from s3:
    It's safe to wipe anything prior to 5/1/15.   The data Matt is using is all more recent than that, collected later in May and June.
    If it's easier to go by participant ID's, do ____NOT_____ delete the participant ID's below:
        7rzzd3, 6sod84, ahhv9h, c7hze5, 66f1zz, qrsmla, fwgs3q, g7s4zv, yi279c, v26kw2

####################################################################
########################## GENERAL TASKS ###########################
####################################################################

check behavior of generating unique device IDs and how that interacts with devices that are not phones... do not know what the behavior of this is.

UHOH, I don't think we have any code for downloading user mac addresses/hashes of them...

double check whether accelerometer timers are fuzzy, this came up in an email exchange, we probably (triple check) can change this behavior.
    turning it on is exact, turning it off is fuzzy

Graph stuff
    -Fix crappy width scaling in the app; don't hard-code it to 200px wide or whatever it is

####################################################################
############################ KNOWN BUGS ############################
####################################################################

Known unknown bug: if the logout timer is less than the max voice recording time period... we have no idea what happens.
[this is Josh:] To answer the above, I'm pretty sure that nothing bad happens: the app automatically logs out, which triggers OnPause in the AudioRecordingActivity, which stops the recording and saves it.  It's bad UX, because the user might be logged out before they've finished the recording, but nothing should actually BREAK.

MMS logging:
    -When we receive MMS messages, we are not grabbing the message length or the "sent time" timestamp.
    -Triple Logging of at least MMS messages:
        Eli tried tracking this behavior down, I'm not positive about it but the best data and answer I have is this:
            Messages live in different "boxes" (inbox, outbox, sent-box, draft-box) and the ContentObserver triggers on various types of updates related to these boxes. We filter out messages that are not in sent-box, this is the behavior I see:
                we get an update when a message moves from one box to another box, however, I swear that messages that are supposed to be in the draft-box frequently claim they are in the sent-box.  buh?  this must be false, I don't know how to filter the data to remove these false updates.
                MMS messages in the sent box get updated when they get read receipts...  the data for these read receipts is always there and is always null.
    -Josh tried tracking this down as well, there is a comment is smssentreceiver

!!!! This can possibly be deprecated, need to attempt to replicate.
if the background process is not running and a user presses a notification to take a survey, the app crashes.  This is probably due to the rendering of a dynamic page requiring access to the survey's json file, which it accesses through the file manager, which has not been instantiated.
    probably the best solution is to make the unencrypted files have their own reader?  that just creates more chances for conflicts....
    TODO: check order of instantiation of for the dynamically rendered pages. (uhg)

Look at the number input box in the survey, and see if changing android:inputType="number" to numberDecimal solves the problem of people putting more than one decimal point into the answer

website: remove bluetooth offset from website, in backend default it to 0.  do not remove from study settings schema.

####################################################################
######################## OPTIONAL THINGS ###########################
####################################################################

Admin Panel UI
    -Make user unable to hit "back" button after logout, and return to the admin panel http://stackoverflow.com/a/20652896/1789466
    -(Josh) Throw in an Admin Panel warning message (don't use IE < 8!)
    -Make the page reload after they create a new patient or remove a device


re-analyze whether the following is true:
    In RegistrationActivity: don't set username and password on the device UNTIL they've been validated by the server.  This would require substantial changes to PostRequest.java.  Leaving this as-is does not actually present any serious security flaws.

####################################################################
############################## FUTURE ##############################
####################################################################

App UI
    -define a style and prettify the UI

add in more user device info, specifically I am thinking of android version, sdk version for debugging

Add crash logging:
    http://stackoverflow.com/questions/19897628/need-to-handle-uncaught-exception-and-send-log-file
    http://www.acra.ch/
    http://stackoverflow.com/questions/601503/how-do-i-obtain-crash-data-from-my-android-application

Improve uploading: Build a _listener_ for WiFi connected, then try to upload files and download surveys

Timers & data upload
    -Add an alert if the phone hasn't been able to upload in a long time?
    -Add a server-side alert if a patient hasn't uploaded data in a long time? - unlikely to be useful...

########################################################################################
####################### ideas (these do not need to be acted on) #######################
########################################################################################

implement a flask url function for a device's phone number changing. all it does is calls upload_device_ids(), add check to android... this means we have to store the phone number (or hash of) in order to check for changes.

Trying to log when the app was started: We can't determine whether the app was started on boot or started by the user opening it.  Maybe we should just give up on this.

if we restart the background service occasionally we can get around the user-disabled bluetooth "problem"

There is no way to inform the user that the encryption key is corrupted.

we may be able to reduce some HTTPS overhead using the following stackoverflow
    http://stackoverflow.com/questions/5643704/reusing-ssl-sessions-in-android-with-httpclient
