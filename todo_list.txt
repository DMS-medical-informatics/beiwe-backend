BEFORE DEMO:

Bluetooth
-Determine whether Bluetooth failure is solvable (Eli) -- checked, it is not.
-Make sure Bluetooth data are formatted and uploaded correctly
-Test whether two phones running the app actually recognize each other via Bluetooth

App UI
-Finalize, style, and pretty-ify the UI

-Debug AudioRecorder on Benjamin's phone
Figure out why AudioRecorder's mp4 outputs can't open in VLC or QuickTime

WiFi (log of available WiFi networks)
-Test, and see if file is written and uploaded properly

-Add an upload/download timer to the app to regularly try uploading files

-Make SessionActivity extend AppActivity.  AppActivity should contain the call hotline button, a menu with the call hotline button, and the service bindings.  SessionActivity should contain all the login stuff.  LoginActivity, ResetPassword, ForgotPassword, and RegisterActivity should extend AppActivity; the rest should extend SessionActivity.
OR:
-Insert PostRequest.initialize() into HTTPAsync or ForgotPassword Activity
Also instantiate LoginManager inside ForgotPasswordActivity, and anything else that isn't a SessionActivity just a regular Activity







AFTER DEMO:

Ask Eli: does it check that patient ID numbers are unique?

Encryption/security
-Anonymizer function needs to be finished (Josh, see TODO in anonymizer function)
-Test asymmetric encryption
-Create shim for symmetric encryption
-Encryption for AudioFileManager

Throw in an Admin Panel warning message (don't use IE < 8!)

Graph of survey responses
-Make it look pretty for all types of survey questions
-Test display on different versions of Android (probably Android v2 and v4), and maybe different screen sizes too
-Let admins see graph for any patient? (Eli says we shouldn't do this)

Password
-Re-document backend keys and make 'em more idiot-proof

Data handlers
-Document and look through the data_handlers.py file, which Dori wrote

Error logging
-Use the error-logging functionality instead of just Python's print() call

Figure out if we're using base.html and what to do with it

Write a data dump/download script

GPS, Accel
-Test

SMS log
-Log outgoing MMS messages

App UI
-Review Dori's code for register, login, and logout logic
-Get an app icon

-Admin Panel patients list... paginate







LOW PRIORITY:

Admin authentication
-Admins should probably be able to change their passwords

Timers & data upload
-Add an alert if the phone hasn't been able to upload in a long time?
-Add a server-side alert if a patient hasn't uploaded data in a long time?

Should we try to log when the app was started?  We can't determine whether the app was started on boot or started by the user opening it.  Maybe we should just give up on this

Look into optimizing battery/power consumption using timers; Eli may have already built all of this