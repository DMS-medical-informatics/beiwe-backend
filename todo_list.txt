BEFORE DEMO:

App UI
-Finalize, style, and pretty-ify the UI
-Create an "About" page

-Debug AudioRecorder on Benjamin's phone
Figure out why AudioRecorder's mp4 outputs can't open in VLC or QuickTime





AFTER DEMO:

Bluetooth
-Make sure Bluetooth data are formatted and uploaded correctly
-Test whether two phones running the app actually recognize each other via Bluetooth

Ask Eli: does it check that patient ID numbers are unique?

-Change the error logging so that when you try to write to an encrypted datafile without a key (i.e., when you're in the RegisterActivity and the app hasn't yet been registered), the NPE logs a _different_ error than "tried to write to a text file before calling TextFileManager.start()"

Encryption/security
-Anonymizer function needs to be finished (Josh, see TODO in anonymizer function)
-Test asymmetric encryption
-Create shim for symmetric encryption
-Encryption for AudioFileManager

Throw in an Admin Panel warning message (don't use IE < 8!)

Graph of survey responses
-Make it look pretty for all types of survey questions
-Test display on different versions of Android (probably Android v2 and v4), and maybe different screen sizes too
-Let admins see graph for any patient? (Eli says we shouldn't do this)

Password
-Re-document backend keys and make 'em more idiot-proof

Data handlers
-Document and look through the data_handlers.py file, which Dori wrote

Error logging
-Use the error-logging functionality instead of just Python's print() call

Figure out if we're using base.html and what to do with it

Write a data dump/download script

GPS, Accel
-Test

SMS log
-Log outgoing MMS messages

App UI
-Review Dori's code for register, login, and logout logic
-Get an app icon

-Admin Panel patients list... paginate

-Make the upload_all_files() function @synchronized because sometimes it tries to upload a file that's already been deleted (set the upload timer to something super short, like 5 seconds, to check for this).  Problem: it's also a static function.  Does this kill the effect of @synchronized, i.e., what we really want is for it to only be able to run once at a time.






LOW PRIORITY:

Figure out how to avoid creating NULLID files

Admin authentication
-Admins should probably be able to change their passwords

Timers & data upload
-Add an alert if the phone hasn't been able to upload in a long time?
-Add a server-side alert if a patient hasn't uploaded data in a long time?

Should we try to log when the app was started?  We can't determine whether the app was started on boot or started by the user opening it.  Maybe we should just give up on this

Look into optimizing battery/power consumption using timers; Eli may have already built all of this

Move Wifi timer to a repeating timer instead of having two intents (WifiLogIntent and WifiLogTimerIntent)