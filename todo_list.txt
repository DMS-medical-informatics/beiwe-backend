##############################################################
#################### Currently In Progress ###################
##############################################################

1. list of additional customizable text strings and parameters:
    a. the message of a survey's notification
    b. text on the main screen of the beiwe app
    c. the duration of the toast message after completing a survey, or make it responsive to the length of the message.  include descriptive text about this on the ui

############################################################
################ ACTUALLY DO THESE THINGS ##################
############################################################

note: the existing credential system for data access will break when we transfer the s3 bucket.
note: the old beiwe bucket is going to throw a wrench into... everything.

send email on upload failure
add to website an obvious display of the study id

Eli:
1. add to notification popping a debug log statement... the point is to have data for researchers saying "hay I'm not getting surveys"
   check whether we already have "entered survey taking activity" to the debug log
2. document all the things that the app will dump into thate debug log.
3. investigate whether it is possible to provide the string for the two phone numbers _on the phone number entry page_ (should be, we are customizing the consent menu...)
4. change the "date" column in phone call logger to "timestamp"
5. check cascading delete with "McLean Baker" study
6. architecture change - implement survey names in backend.
7.  updates for Marshmallow
    new permissions - "To access the hardware identifiers of nearby external devices via Bluetooth and Wi-Fi scans, your app must now have the ACCESS_FINE_LOCATION or ACCESS_COARSE_LOCATION permissions"
    new alarm functions - setAndAllowWhileIdle and setExactAndAllowWhileIdle are new alarm functions that we will probably have to handle in the alarm manager code.
    app standby - add isIgnoringBatteryOptimizations()
    how-to for debugging this - http://developer.android.com/training/monitoring-device-state/doze-standby.html
    update docs or beiwedata about bluetooth ID in android 6.0
8. app debug - In RegistrationActivity, make sure we don't set username and password on the device UNTIL they've been validated by the server.
    a. if this would require substantial changes to PostRequest.java, don't implement change, move todo somewhere else.
9. add retire study functionality


Josh:
0: "Josh, go through the contract and send jeanette a thing on how we can get the final chunk of the contract payment."

-Check per-study permissions; researchers can go straight to the URL of a study they're not authorized on
-Fix the "Next" button in the in-app survey
-Make some questions optional
-Make the in-app survey input fields more obvious for open-response questions
-Change the "password must be more than 6 characters" language to "password must be at least 6 characters"
-Probably don't enforce that the temporary registration password is 6+ characters long
-Figure out how to handle info text box questions in randomized surveys
1. check that the new key for app encryption does what we want it to do.
2. website - add a "confirm" field for the 32-character key that super-admins enter when they create a new study.
3. website - Check why automatic logout keeps happening - it seems that the session expiration date does not get renewed on every pageload; only on login.
4. website/backend: See if we can use flask_login and standardized parameters so that not every page needs to pass in information about the logged in user
5. website - implement error checking for invalid or problematic values for timers on the study settings page
    a. maximum audio recording duration cannot be longer than the logout timer
    b. bluetooth global offset should not be longer than the other bluetooth timer values
6. website - error pages for admin permission denied, and survey not found (this redirect occurs in the survey/study access decorator, currently we just throw a 403 and 404, respectively)
7. website - I see 4 todos in base.html, footer.html, and view_study.html.  These are super low priority, but they don't show up in liclipse todo, so I'm sticking a reminder here.
8. Make a crude logo (just a capital letter "B" inside a square)


################################################################
################ Researcher Data Access System #################
################################################################

POST REQUEST:
has a url.... /api/v1/get_datums
    required: access key
    required: access secret
    data streams (json blob) - default to all
    users (json blob) - defaults to all
    required: study
    date-start (define format)
    date-end (define format)
    top-up = a file (registry.dat)
    this request gets logged, store the... return code of the request (i.e. store 403 errors for no access to study, 400 errors for bad user name...)

return value:
    a zip file
    contains a folder structure probably matching the data streams on s3
    a registry.dat file

registry.dat file:
    containing file paths of chunks
    each chunk's md5 hash

chunk:
    a chunk is a processed csv of data of a stream of a user for 1 hour of time
    ONLY DATA FROM THAT HOUR IS IN THAT CHUNK


== mongo database collections ==

ChunksRegistry:
    study
    user
    datastream
    datetime of chunk start
    hash-o-chunk data
    s3 file path

list-o-raw-files-what-needs-processing:
    s3 file path


== end db nonsense ==

periodic update job:
    cron: hourly event
    consume from list-o-raw-files-what-needs-processing the raw files
        for each row find the appropriate chunk in s3, insert into chunk, sort the chunk, update hash, insert that file into that same s3 path.
        (make the above not suck)
    also: when a file is uploaded, add that file to the list-o-raw-files-what-needs-processing
    if possible: pop things off of this database (retreive and delete as an atomic operation) to avoid race
    IF THIS PROCESS TAKES MORE THAN... 40 MINUTES SEND AN ERROR EMAIL AND DONT START AGAIN AT AN HOUR
        okay this is full of race conditions, consider an update to cron to get the name-o-process that is running and... provide options on what to do in that case.
        maybe instead stick a key "LOCK ME" the collection, we can guarantee 1/hour runtime, only run if that value is not set... but if it breaks (the process dies leaving the lock in the db) we need to be sent an error email, so we can go fix it...


updates to auth system:
    on creating a user or at will...
    create a set of creds and a way for a user to view their creds
    when a user creates new creds invalidate old creds...
    when users were issued credentials (because inevitably they will want cred retirement...)


web form:
    multiselection box of users and data streams...
    download the zip...
    display what I need to paste into python to get mah datums


User python code:
    TBD

############################################################
########## Things to check in on in a few months ###########
############################################################

updates for data display in the app: it is really low priority.
feature proposal: add a third level of admins, study admiinistration
feature proposal: retire a study. (make a study appear as inactive or something)

####################################################################
######################## OPTIONAL THINGS ###########################
####################################################################

Admin Panel UI
    -Make user unable to hit "back" button after logout, and return to the admin panel http://stackoverflow.com/a/20652896/1789466
    -Make the page reload after they create a new patient or remove a device


########################################################################
######################### Future Improvements ##########################
########################################################################

add in more user device info, specifically I am thinking of android version, sdk version for debugging

Add crash logging:
    http://stackoverflow.com/questions/19897628/need-to-handle-uncaught-exception-and-send-log-file
    http://www.acra.ch/
    http://stackoverflow.com/questions/601503/how-do-i-obtain-crash-data-from-my-android-application

Improve uploading: Build a _listener_ for WiFi connected, then try to upload files and download surveys

Timers & data upload
    -Add an alert if the phone hasn't been able to upload in a long time?
    -Add a server-side alert if a patient hasn't uploaded data in a long time? - unlikely to be useful...

Improve logging when the app was started
    -We can't determine whether the app was started on boot or started by the user opening it.

we may be able to reduce some HTTPS overhead using the following stackoverflow
    http://stackoverflow.com/questions/5643704/reusing-ssl-sessions-in-android-with-httpclient

Yet more work on bluetooth:
    ensure that phones running 5+ are broadcasting bluetooth beacons (does not work on 4.x)

merge mms and sms sent receivers if possible.


####################################################################
############################ KNOWN BUGS ############################
####################################################################

Known unknown bug: if the logout timer is less than the max voice recording time period... we have no idea what happens.
[this is Josh:] To answer the above, I'm pretty sure that nothing bad happens: the app automatically logs out, which triggers OnPause in the AudioRecordingActivity, which stops the recording and saves it.  It's bad UX, because the user might be logged out before they've finished the recording, but nothing should actually BREAK.

MMS logging:
    -When we receive MMS messages, we are not grabbing the message length or the "sent time" timestamp.
    -Triple Logging of at least MMS messages:
        Eli tried tracking this behavior down, I'm not positive about it but the best data and answer I have is this:
            Messages live in different "boxes" (inbox, outbox, sent-box, draft-box) and the ContentObserver triggers on various types of updates related to these boxes. We filter out messages that are not in sent-box, this is the behavior I see:
                we get an update when a message moves from one box to another box, however, I swear that messages that are supposed to be in the draft-box frequently claim they are in the sent-box.  buh?  this must be false, I don't know how to filter the data to remove these false updates.
                MMS messages in the sent box get updated when they get read receipts...  the data for these read receipts is always there and is always null.
    -Josh tried tracking this down as well, there is a comment is smssentreceiver

Look at the number input box in the survey, and see if changing android:inputType="number" to numberDecimal solves the problem of people putting more than one decimal point into the answer
